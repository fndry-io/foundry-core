<?php

namespace {{MODULE_NAMESPACE}}\Tests\Feature;

use Illuminate\Foundation\Testing\DatabaseMigrations;
use Foundry\System\Models\User;

use Tests\TestCase;

class {{FEATURE_NAME}}Test extends TestCase
{
    use DatabaseMigrations;

    public function test{{FEATURE_NAME}}()
    {
        $this->seed(\FoundrySystemSeeder::class);

        $this->login();
        $this->assertAuthenticatedAs($this->auth);

        $user = User::query()->find(1);

        /**
         * Add
         */
        $response = $this->json('POST', '/api/{{PROVIDER}}/{{NAME_PLURAL}}/add', [
            //todo add the fields
        ]);
        $this->assertDatabaseHas('{{MODEL_TABLE_NAME}}', [
            //todo add fields
        ]);
        $entity = $response->getData();

        /**
         * Edit
         */
        $response = $this->json('POST', '/api/{{PROVIDER}}/{{NAME_PLURAL}}/' . $entity->id . '/edit', [
            //todo add fields
        ]);
        $this->assertDatabaseHas('{{MODEL_TABLE_NAME}}', [
            //todo add fields
        ]);

        /**
         * Read
         */
        $response = $this->json('GET', '/api/{{PROVIDER}}/{{NAME_PLURAL}}/' . $entity->id);
        $response->assertOk();
        $entity = $response->getData();

        /**
         * Browse
         */
        $response = $this->json('GET', '/api/{{PROVIDER}}/{{NAME_PLURAL}}');
        $response->assertPaginated();

        /**
         * Select
         */
        $response = $this->json('GET', '/api/{{PROVIDER}}/{{NAME_PLURAL}}/select');
        $response->assertOk();
        $this->assertNotEmpty($response->getData());

        /**
         * Delete
         */
        $response = $this->json('POST', '/api/{{PROVIDER}}/{{NAME_PLURAL}}/' . $entity->id . '/delete');
        $response->assertOk();
        $this->assertDatabaseMissing('{{MODEL_TABLE_NAME}}',
            [
                'id' => $entity->id,
                'deleted_at' => null
            ]
        );

        /**
         * Restore
         */
        $response = $this->json('POST', '/api/{{PROVIDER}}/{{NAME_PLURAL}}/' . $entity->id . '/restore');
        $response->assertOk();
        $this->assertDatabaseHas('{{MODEL_TABLE_NAME}}',
            [
                'id' => $entity->id,
                'deleted_at' => null
            ]
        );
    }

}
